#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            bindings = <
&kp TILDE   &kp N1        &kp N2        &kp N3     &kp N4     &kp N5        &kp UP_ARROW     &kp N6     &kp N7         &kp N8     &kp N9      &kp N0    &kp RIGHT_BRACKET
&kp TAB     &kp Q         &kp W         &kp E      &kp R      &kp T         &kp DOWN_ARROW   &kp Y      &kp U          &kp I      &kp O       &kp P     &kp LEFT_BRACKET
&kp ESCAPE  &kp A         &kp S         &kp D      &kp F      &kp G         &kp LEFT_ARROW   &kp H      &kp J          &kp K      &kp L       &kp SEMI  &kp APOS
&kp LSHFT   &kp Z         &kp X         &kp C      &kp V      &kp B         &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA  &kp DOT     &kp FSLH  &kp BACKSLASH
&kp C_MUTE  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp SPACE  &kp DELETE    &none            &kp ENTER  &kp BACKSPACE  &mo 1      &kp INSERT  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
            label = "Main";
        };

        Secondary {
            bindings = <
&kp F11     &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &mmv MOVE_UP     &kp F6     &kp F7    &kp F8    &kp F9     &kp F10    &kp F12
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &kp PG_UP  &kp END   &kp UP    &kp HOME   &kp MINUS  &kp EQUAL
&trans      &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans
&trans      &none   &none   &none   &none   &none     &mmv MOVE_RIGHT  &trans     &trans    &trans    &trans     &trans     &trans
&kp C_MUTE  &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans     &trans    &trans    &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
            label = "Secondary";
        };

        Hardware {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none        &none
&none        &bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &none           &none  &none  &none  &none  &none  &none        &none
&sys_reset   &out OUT_USB  &out OUT_BLE    &none         &none         &none           &none  &none  &none  &none  &none  &none        &none
&none        &none         &none           &bootloader   &none         &none           &none  &none  &none  &none  &none  &bootloader  &none
&none        &none         &none           &none         &none         &none           &none  &none  &none  &none  &none  &none
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Hardware";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
